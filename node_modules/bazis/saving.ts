import * as path from 'path';

export function SaveObject(obj: Object3, filename: string){    
    Undo.BeginOper(''); //создаем отменяемый блок операций
    try{
        Model.forEach((objec: Object3)=>{
            if (objec !== obj && objec.IsOwner(obj)){
                DeleteObject(objec);
            }
        })
        Action.SaveModel(filename); //сохраняем то, что получилось
    }
    finally{
        Undo.EndAndUndoOper(); //завершаем блок операций и отменяем его (возвращаемся к начальному состоянию)
    }
}

export function SaveObjectByName(objectName: string, filename: string, firstOnly: boolean){

    function getFilename(filename: string, num: number): string{        
        let parsedPath = path.parse(filename);
        return parsedPath.root + parsedPath.dir + parsedPath.name + num + parsedPath.ext;
    }

    let found = false;
    let num = 1;
    Model.forEach((obj)=>{
        if (!found && (obj.Name === objectName)){
            SaveObject(obj, firstOnly? filename: getFilename(filename, num));
            if (firstOnly){
                found = true;
            }
        }
    })    
}